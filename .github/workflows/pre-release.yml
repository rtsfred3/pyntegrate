---
name: "pre-release"

on:
  push:
    branches:
      - "master"

jobs:
  pre-release:
    name: "Pre Release"
    runs-on: "ubuntu-latest"

    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          ref: 'pypi'
          python-version: '3.7'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
          pip install wheel
      - name: Build package
        run: |
          ls
          #python3 setup.py sdist
          #python3 setup.py bdist_wheel --plat-name=manylinux1-i686
          #python3 setup.py bdist_wheel --plat-name=manylinux1-x86_64
          #python3 setup.py bdist_wheel --plat-name=manylinux2010-i686
          #python3 setup.py bdist_wheel --plat-name=manylinux2010-x86_64
          #python3 setup.py bdist_wheel --plat-name=manylinux2014-i686
          #python3 setup.py bdist_wheel --plat-name=manylinux2014-x86_64
          #python3 setup.py bdist_wheel --plat-name=manylinux2014-aarch64
          #python3 setup.py bdist_wheel --plat-name=manylinux2014-armv7l
          #python3 setup.py bdist_wheel --plat-name=manylinux2014-ppc64
          #python3 setup.py bdist_wheel --plat-name=manylinux2014-ppc64le
          #python3 setup.py bdist_wheel --plat-name=manylinux2014-s390x
          #python3 setup.py bdist_wheel --plat-name=win32
          #python3 setup.py bdist_wheel --plat-name=win-amd64
        
      #- uses: "marvinpinto/action-automatic-releases@latest"
      #  with:
      #    repo_token: "${{ secrets.GITHUB_TOKEN }}"
      #    automatic_release_tag: "latest"
      #    prerelease: true
      #    title: "Development Build"
      #    files: |
      #      LICENSE.txt
      #      *.whl
      #      *.tar.gz
