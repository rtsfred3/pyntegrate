---
name: "test-release"

on:
    schedule:
        - cron: '30 0 * * *'
    push:
        branches:
            - "master"

jobs:
    generate-test-release:
        name: "Generating Test Release"
    
        strategy:
            matrix:
                python-version: [ '3.6', '3.7', '3.8', '3.9', '3.10' ]
                platform: [ macos-latest, ubuntu-latest ]
        
        runs-on: ${{ matrix.platform }}
    
        steps:
            - uses: actions/checkout@v2
            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python-version }}
            - name: Get Version Number
              id: version
              run: echo "::set-output name=version::$(python3 setup.py --version)"
            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install build
                pip install wheel
            - name: Build package
              run: python3 setup.py bdist_wheel
            - name: Uploading Artifacts
              uses: actions/upload-artifact@v3
              with:
                  name: test-whl-artifacts
                  path: |
                        dist/*.whl
                        dist/*.tar.gz
    
    test-test-release:
        name: "Testing Wheel Files for GitHub Test-Release"
        needs: generate-pre-release
    
        strategy:
            matrix:
                python-version: [ '3.7', '3.8', '3.9', '3.10' ]
                platform: [ macos-latest, ubuntu-latest ]
                
        runs-on: ${{ matrix.platform }}
    
        steps:
            - uses: actions/checkout@v2
            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python-version }}
            - name: Install Wheel
              run: echo '${{ matrix.python-version }}'
    
    test-release:
        name: "Test Release"
        runs-on: "ubuntu-latest"
        needs: generate-test-release
        
        steps:
            - uses: actions/checkout@v2
            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: 3.7
            - name: Get Version Number
              id: version
              run: echo "::set-output name=version::$(python3 setup.py --version)"
            - name: Downloading Artifacts
              uses: actions/download-artifact@v3
              with:
                  name: test-whl-artifacts
                  path: dist/
            - uses: "marvinpinto/action-automatic-releases@latest"
              with:
                  repo_token: "${{ secrets.GITHUB_TOKEN }}"
                  automatic_release_tag: "dev_2_v${{ steps.version.outputs.version }}"
                  prerelease: true
                  title: "Dev 2 Build v${{ steps.version.outputs.version }}"
                  files: |
                        dist/*.whl
                        dist/*.tar.gz
