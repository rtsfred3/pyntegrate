---
name: "release"

on:
    push:
        branches:
            - "pypi"

jobs:
    gen-release:
        name: "Generating Wheel Files for GitHub Release"
        runs-on: "ubuntu-latest"
    
        strategy:
            matrix:
                python-version: [ '3.9', '3.10' ]
    
        steps:
            - uses: actions/checkout@v2
            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python-version }}
            - name: Get Version Number
              id: version
              run: echo "::set-output name=version::$(python3 setup.py --version)"
            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install build
                pip install wheel
            - name: Build package
              run: ./generate_whl.sh
            - name: Uploading Artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: release-whl-artifacts
                  path: |
                        dist/*.whl
                        dist/*.tar.gz
    
    release:
        name: "Release on GitHub"
        runs-on: "ubuntu-latest"
        needs: gen-release
        
        steps:
            - uses: actions/checkout@v2
            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: 3.7
            - name: Get Version Number
              id: version
              run: echo "::set-output name=version::$(python3 setup.py --version)"
            - name: Downloading Artifacts
              uses: actions/download-artifact@v4.1.7
              with:
                  name: release-whl-artifacts
                  path: dist/
            - uses: "marvinpinto/action-automatic-releases@latest"
              with:
                  repo_token: "${{ secrets.GITHUB_TOKEN }}"
                  automatic_release_tag: "release_latest"
                  prerelease: false
                  title: "Latest Release Build"
                  files: |
                        dist/*.whl
                        dist/*.tar.gz
            - uses: "marvinpinto/action-automatic-releases@latest"
              with:
                  repo_token: "${{ secrets.GITHUB_TOKEN }}"
                  automatic_release_tag: "dev_v${{ steps.version.outputs.version }}"
                  prerelease: false
                  title: "Release Build v${{ steps.version.outputs.version }}"
                  files: |
                        dist/*.whl
                        dist/*.tar.gz
    
    pypi-release:
        name: "Release on PyPi"
        runs-on: "ubuntu-latest"
        needs: gen-release
        
        steps:
            - name: Downloading Artifacts
              uses: actions/download-artifact@v4.1.7
              with:
                  name: release-whl-artifacts
                  path: dist/
            - name: Publish Package
              uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
              with:
                user: __token__
                password: ${{ secrets.PYPI_API_TOKEN }}
    
    # release-branch:
    #     name: "Creates Release Branch"
    #     runs-on: "ubuntu-latest"
    #
    #     steps:
    #         - uses: actions/checkout@v2
    #         - name: Set up Python
    #           uses: actions/setup-python@v2
    #           with:
    #               python-version: ${{ matrix.python-version }}
    #         - name: Get Version Number
    #           id: version
    #           run: echo "::set-output name=version::$(python3 setup.py --version)"
    #         - name: Committing Archive to Repo
    #           run: |
    #             git config --global user.email "${{ secrets.EMAIL }}"
    #             git config --global user.name ${{ secrets.USERNAME }}
    #             git checkout
